
FOR_STATMENT
    // init code
    jmp for_begin
    label loop_begin
    // exp 
    btrue  for_begin exp
    bfalse  loop_end exp
    label for_suf
    // suf code
    jmp loop_begin
    label for_begin
    // code
    jmp for_suf
    label loop_end

WHILE_STATMENT
    loop_begin
    check_data
        false -> loop_end
    code
    jmp loop_begin
    loop_end

IF_STATMENT
    check_data
        false->if_end
    if_begin
    code
    jmp else_end
    if_end 
    else_code
    else_end 

SWITCH 
    // exp (stack_top)
    push c
    pop i pop c 
    sub i,c, tmp
    btrue case_end tmp
    push i
    // code_list
    label case_end 
    // default code_list
    label switch_end 
    pop i

label 
jmp 

DECL_LIST
    push type
    
    push id 
    push val
    pop val 
    pop id 
    pop type 
    decl id type 
    assign id = val 
    push type

    push id 
    push int_const
    pop int_const
    pop type  
    decl id type int_const
    
    initlist begin
    
    push exp
    pop exp
    add initlist val

    initlist end
